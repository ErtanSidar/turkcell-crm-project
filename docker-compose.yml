services:
  user-service-db:
    image: postgres
    container_name: "user-service-db"
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=userservice
    volumes:
      - user-service-db-data:/var/lib/postgresql/data
    networks:
      - common

  customer-service-db:
    image: postgres
    container_name: "customer-service-db"
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=customerservice
    volumes:
      - customer-service-db-data:/var/lib/postgresql/data
    networks:
      - common

  customer-support-service-db:
    image: mongo
    container_name: "customer-support-service-db"
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - customer-support-service-db-data:/data/db
    networks:
      - common

  billing-payment-service-db:
    image: mysql:latest
    container_name: billing-payment-service-db
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: billingpaymentservice
      MYSQL_USER: admin
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    volumes:
      - billing-payment-service-db-data:/var/lib/mysql
    networks:
      - common

  contract-service-db:
    image: mysql:latest
    container_name: contract-service-db
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: contractservice
      MYSQL_USER: admin
      MYSQL_PASSWORD: test
    ports:
      - "3307:3306"
    volumes:
      - contract-service-db-data:/var/lib/mysql
    networks:
      - common

  analytic-service-db:
    image: mongo
    container_name: "analytic-service-db"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - analytic-service-db-data:/data/db
    networks:
      - common

  plan-service-db:
    image: postgres
    container_name: "plan-service-db"
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=planservice
    volumes:
      - plan-service-db-data:/var/lib/postgresql/data
    networks:
      - common

  mail-dev:
    container_name: mail-dev-bsn
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

#  redis:
#    image: redis:latest
#    container_name: redis
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    command: [ "redis-server", "--appendonly", "yes" ]
#
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    container_name: redis-commander
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    ports:
#      - "8091:8081"
#    depends_on:
#      - redis

  configserver:
    image: "essoft3/configserver-turkcell"
    container_name: configserver
    ports:
      - "8888:8888"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8888/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - common


  discoveryserver:
    image: "essoft3/discoveryserver-turkcell"
    container_name: discoveryserver
    ports:
      - "8761:8761"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8761/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - common

  gatewayserver:
    image: "essoft3/gatewayserver-turkcell"
    container_name: gatewayserver
    ports:
      - "8072:8072"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8072/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    networks:
      - common

  analyticservice:
    image: "essoft3/analyticservice-turkcell"
    container_name: analyticservice
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    healthcheck:
      test: "wget --spider --quiet http://localhost:8080/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    networks:
      - common

  billingpaymentservice:
    image: "essoft3/billingpaymentservice-turkcell"
    container_name: billingpaymentservice
    ports:
      - "8081:8081"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8081/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  contractservice:
    image: "essoft3/contractservice-turkcell"
    container_name: contractservice
    ports:
      - "8082:8082"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8082/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  customerservice:
    image: "essoft3/customerservice-turkcell"
    container_name: customerservice
    ports:
      - "8083:8083"
      - "5003:5003"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8083/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  customersupportservice:
    image: "essoft3/customersupportservice-turkcell"
    container_name: customersupportservice
    ports:
      - "8084:8084"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8084/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  notificationservice:
    image: "essoft3/notificationservice-turkcell"
    container_name: notificationservice
    ports:
      - "8085:8085"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8085/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  planservice:
    image: "essoft3/planservice-turkcell"
    container_name: planservice
    ports:
      - "8086:8086"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8086/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  userservice:
    image: "essoft3/userservice-turkcell"
    container_name: userservice
    ports:
      - "8087:8087"
    healthcheck:
      test: "wget --spider --quiet http://localhost:8087/actuator/health/readiness || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - common

  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

volumes:
  analytic-service-db-data:
  billing-payment-service-db-data:
  contract-service-db-data:
  customer-service-db-data:
  customer-support-service-db-data:
  plan-service-db-data:
  user-service-db-data:
  redis_data:

networks:
  common:
    driver: bridge