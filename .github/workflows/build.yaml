name: Spring Boot Microservices Project CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-changed-services.outputs.services }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect Changed Services
        id: changed-files
        uses: tj-actions/changed-files@v41

      - name: Set Changed Services
        id: set-changed-services
        run: |
          changed_services=""
          for service in analyticsservice billingpaymentservice configserver contractservice customerservice customersupportservice discoveryserver gatewayserver notificationservice planservice userservice; do
            if echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -q "$service/"; then
              changed_services+="\"$service\","
            fi
          done
          changed_services="[${changed_services%,}]"
          echo "Changed Services: $changed_services"
          echo "services=$changed_services" >> $GITHUB_ENV
          echo "::set-output name=services::$changed_services"

  build-and-push:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Build with Maven
        working-directory: ${{ matrix.service }}
        run: mvn clean package -DskipTests

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER_NAME }}/${{ matrix.service }}-turkcell:latest
